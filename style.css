:root{
    --blanco:  #ffffff ;
    --negro:   #212121;
    --primario:  #ffc107;
    --secundario: #0097a7;
    --gris: #757575;
    --grisClaro:#DEF9F3;
}

/*--- Globales ---*/
html{
    font-size: 62.5%;
    box-sizing:border-box;
    scroll-snap-type: y mandatory;
}
/*--- Scroll Snap ---*/
.servicios, 
.navegacion-principal, 
.formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

*, *:before, *:after{
    box-sizing: inherit;
}
body{
    font-size:16px; 
    font-family:'Krub', sans-serif;
    margin:0;
    padding:0;
    background: linear-gradient(to top, var(--grisClaro) 0% , var(--blanco) 100%);
}
/* Con el codigo html y body escrito anteriormente, pasamos a tener los siguientes valores , donde 1rem = 10px*/

h1{
    font-size:3.8rem;
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size:1.8rem;
}
h1,h2,h3{
    text-align: center;
}
.titulo span{
    font-size:2rem;
    display:block;
}

@media (min-width: 768px) {
    .titulo span{
        display:inline;
    }
    
}
/* Selector de atributos
[src: logo.png]{
color:blue;
} */

.contenedor{
    max-width:120rem;
    margin: 0 auto;
    
}
.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);/* tanto el webkit como el moz se agregan porque no todas las propiedades de css son interpretadas por todos los navegadores, por tanto tenemos que utilizarlas de esa manera.*/
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);
    background-color:var(--blanco);
    padding:2rem;
    border-radius:1rem;
}

.boton{
    background-color:var(--secundario);
    color:var(--blanco);
    padding: 1rem 3rem;
    margin-top:3rem;
    font-size:2rem;
    text-transform:uppercase;
    font-weight:700;
    border-radius:.5rem;
    text-decoration:none;
    width:90%;
    text-align:center;
    border:none;
}



@media (min-width: 768px) {
    .boton{
        width:auto;
    }

}
.boton:hover{
    cursor:pointer;
}
/* Utilidades */
.w-sm-100{
    width:100%;
}

@media (min-width: 768px) {
    .w-sm-100{
        width:auto;
    }
}
.flex{
    display:Flex;   
}

.alinear{
    justify-content: flex-end;
}




/*--- Navegacion Principal ---*/

.nav-bg{
    background-color:var(--secundario);
}
.navegacion-principal{
    /* background-color:var(--secundario); */
    display:flex;
    flex-direction: column;
}

.navegacion-principal a{
    display:block;
    text-align: center;
    color:var(--blanco);
    text-decoration:none;
    font-size:2rem;
    font-weight:700;
    padding:1rem;
}

.navegacion-principal a:hover {
    background-color: var(--primario);
    color:var(--negro);
}

@media (min-width: 768px) {
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between;
    }
}
                    /* Media Queries */
/* un atajo para crear media queries es presionar Ctrl + Shift + p en windows , y buscar user snippets, entrar en css.json y luego crear el atajo para neustro media querie */


                    /* --- Hero --- */
.hero{
    background-image:url(/imagenes/pexels-thebstudio-947845.jpg);
    background-repeat:no-repeat;
    background-size:cover;
    height:450px;
    /* padding:20px; */
    position:relative; /*el contenedor padre, siempre debe tener posicion relativa, para que el hijo se pueda posicionar de forma absoluta*/
    margin-bottom:2rem;
}

.contenido-hero{
    position:absolute;
    background-color:rgba(0,0,0,0.7);
    width:100%;
    height: 100%;
    display:flex;
    flex-direction:column;/*Para alinear horizontalmente, utilizo align-items, y verticalmente, justify-content*/
    align-items: center;
    justify-content: center;
    
}

.contenido-hero svg{
    color:var(--primario);
}

.contenido-hero h2, .contenido-hero p{
    color:var(--blanco);
}

                    /*--- Servicios --- */




@media (min-width: 768px) {
    .servicios{
    display:grid;
    grid-template-columns:repeat(3,1fr) /* es lo mismo que 1fr 1 fr 1fr ó 33.3% 33.3% 33.3%*/;
    column-gap:1rem;
    }
}

.servicio{
    display:flex;
    flex-direction:column;
    align-items: center;
}

.servicio h3{
    color:var(--secundario);
    font-weight:400;
}

.servicio p{
    line-height: 2;
    text-align: center;
}
.servicio .iconos{
    height:15rem;
    width:15rem;
    background-color:var(--primario);
    border-radius:50%;
    display:flex;
    justify-content: space-evenly;/*Esta propiedad me sirve mas para separar a los 2 iconos que se encuentran dentro del circulo de Aplicaciones Moviles.*/
    align-items: center;
}
/* Flexbox se utiliza para la alineacion o distribucion de los elementos que estaran dentro de contenedores.
Grid se utiliza para definir el layout de tu sitio web, como pueden ser las columnas o contenedores de elementos.*/


                    /*--- Contacto ---*/

.formulario{
    background-color:var(--gris);
    width:min(60rem, 100%);/*Le damos dos parametros de los cuales va a utilizar el valor mas pequeño entre los dos parametros que le estamos dando.Con esta propiedad nos podemos ahorrar el codigo de algunos Media Queries.*/
    margin: 0 auto; /* se utiliza siempre y cuando el contenedor padre no este utilizando un display:flex;*/
    padding:3rem;
    border-radius:1rem;
}

.formulario fieldset{
    border:none;
}

.formulario legend{
    color:var(--primario);
    font-weight:700;
    text-align:center;
    font-size:1.8rem;
    text-transform:uppercase;
    margin-bottom:2rem;
}

@media (min-width:768px) {
    .contenedor-campos{
        display:grid;
        grid-template-columns: repeat(2,1fr);
        grid-template-rows: auto auto 20rem;
        column-gap:1rem;
    }

    .campo:nth-child(3) , .campo:nth-child(4){
        grid-column:1/3;
    }

    .alinear{
        margin-top: 1rem;
    }
}


.campo{
    margin-bottom:1rem;
}

.campo label{
    color:var(--blanco);
    font-weight:bold;
    margin-bottom:.5rem;
    display:block;
}

.campo textarea{
    height:20rem;
}

.input-text{
    width:100%;
    border:none;
    padding:1.5rem;
    border-radius:.5rem;
}

/*--- Footer ---*/

.footer{
    text-align: center;
}
